{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iaref\\\\Desktop\\\\Top5ListHW4Solution\\\\Top5Lists_HW4_Solution\\\\client\\\\src\\\\components\\\\ListCard.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport Box from '@mui/material/Box';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\n/*\r\n    This is a card in our list of top 5 lists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCard(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  const {\n    idNamePair,\n    selected\n  } = props;\n\n  function handleLoadList(event, id) {\n    console.log(\"handleLoadList for \" + id);\n\n    if (!event.target.disabled) {\n      let _id = event.target.id;\n      if (_id.indexOf('list-card-text-') >= 0) _id = (\"\" + _id).substring(\"list-card-text-\".length);\n      console.log(\"load \" + event.target.id); // CHANGE THE CURRENT LIST\n\n      store.setCurrentList(id);\n    }\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  async function handleDeleteList(event, id) {\n    event.stopPropagation();\n    let _id = event.target.id;\n    _id = (\"\" + _id).substring(\"delete-list-\".length);\n    store.markListForDeletion(id);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  let selectClass = \"unselected-list-card\";\n\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n\n  let cardStatus = false;\n\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n\n  let cardElement = /*#__PURE__*/_jsxDEV(ListItem, {\n    id: idNamePair._id,\n    sx: {\n      marginTop: '15px',\n      display: 'flex',\n      p: 1\n    },\n    style: {\n      width: '100%'\n    },\n    button: true,\n    onClick: event => {\n      handleLoadList(event, idNamePair._id);\n    },\n    style: {\n      fontSize: '48pt'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        flexGrow: 1\n      },\n      children: idNamePair.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleToggleEdit,\n        \"aria-label\": \"edit\",\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          style: {\n            fontSize: '48pt'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: event => {\n          handleDeleteList(event, idNamePair._id);\n        },\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          style: {\n            fontSize: '48pt'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, idNamePair._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"list-\" + idNamePair._id,\n      label: \"Top 5 List Name\",\n      name: \"name\",\n      autoComplete: \"Top 5 List Name\",\n      className: \"list-card\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: idNamePair.name,\n      inputProps: {\n        style: {\n          fontSize: 48\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: 24\n        }\n      },\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n  return cardElement;\n}\n\n_s(ListCard, \"38p5JyQxb0t3bNVJEZBmf+lOHIE=\");\n\n_c = ListCard;\nexport default ListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"sources":["C:/Users/iaref/Desktop/Top5ListHW4Solution/Top5Lists_HW4_Solution/client/src/components/ListCard.js"],"names":["useContext","useState","GlobalStoreContext","Box","DeleteIcon","EditIcon","IconButton","ListItem","TextField","ListCard","props","store","editActive","setEditActive","text","setText","idNamePair","selected","handleLoadList","event","id","console","log","target","disabled","_id","indexOf","substring","length","setCurrentList","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsListNameEditActive","handleDeleteList","markListForDeletion","handleKeyPress","code","changeListName","handleUpdateText","value","selectClass","cardStatus","isListNameEditActive","cardElement","marginTop","display","p","width","fontSize","flexGrow","name","style"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYX,UAAU,CAACE,kBAAD,CAA5B;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEe,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BP,KAAjC;;AAEA,WAASQ,cAAT,CAAwBC,KAAxB,EAA+BC,EAA/B,EAAmC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,EAApC;;AACA,QAAI,CAACD,KAAK,CAACI,MAAN,CAAaC,QAAlB,EAA4B;AACxB,UAAIC,GAAG,GAAGN,KAAK,CAACI,MAAN,CAAaH,EAAvB;AACA,UAAIK,GAAG,CAACC,OAAJ,CAAY,iBAAZ,KAAkC,CAAtC,EACID,GAAG,GAAG,CAAC,KAAKA,GAAN,EAAWE,SAAX,CAAqB,kBAAkBC,MAAvC,CAAN;AAEJP,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUH,KAAK,CAACI,MAAN,CAAaH,EAAnC,EALwB,CAOxB;;AACAT,MAAAA,KAAK,CAACkB,cAAN,CAAqBT,EAArB;AACH;AACJ;;AAED,WAASU,gBAAT,CAA0BX,KAA1B,EAAiC;AAC7BA,IAAAA,KAAK,CAACY,eAAN;AACAC,IAAAA,UAAU;AACb;;AAED,WAASA,UAAT,GAAsB;AAClB,QAAIC,SAAS,GAAG,CAACrB,UAAjB;;AACA,QAAIqB,SAAJ,EAAe;AACXtB,MAAAA,KAAK,CAACuB,uBAAN;AACH;;AACDrB,IAAAA,aAAa,CAACoB,SAAD,CAAb;AACH;;AAED,iBAAeE,gBAAf,CAAgChB,KAAhC,EAAuCC,EAAvC,EAA2C;AACvCD,IAAAA,KAAK,CAACY,eAAN;AACA,QAAIN,GAAG,GAAGN,KAAK,CAACI,MAAN,CAAaH,EAAvB;AACAK,IAAAA,GAAG,GAAG,CAAC,KAAKA,GAAN,EAAWE,SAAX,CAAqB,eAAeC,MAApC,CAAN;AACAjB,IAAAA,KAAK,CAACyB,mBAAN,CAA0BhB,EAA1B;AACH;;AAED,WAASiB,cAAT,CAAwBlB,KAAxB,EAA+B;AAC3B,QAAIA,KAAK,CAACmB,IAAN,KAAe,OAAnB,EAA4B;AACxB,UAAIlB,EAAE,GAAGD,KAAK,CAACI,MAAN,CAAaH,EAAb,CAAgBO,SAAhB,CAA0B,QAAQC,MAAlC,CAAT;AACAjB,MAAAA,KAAK,CAAC4B,cAAN,CAAqBnB,EAArB,EAAyBN,IAAzB;AACAkB,MAAAA,UAAU;AACb;AACJ;;AACD,WAASQ,gBAAT,CAA0BrB,KAA1B,EAAiC;AAC7BJ,IAAAA,OAAO,CAACI,KAAK,CAACI,MAAN,CAAakB,KAAd,CAAP;AACH;;AAED,MAAIC,WAAW,GAAG,sBAAlB;;AACA,MAAIzB,QAAJ,EAAc;AACVyB,IAAAA,WAAW,GAAG,oBAAd;AACH;;AACD,MAAIC,UAAU,GAAG,KAAjB;;AACA,MAAIhC,KAAK,CAACiC,oBAAV,EAAgC;AAC5BD,IAAAA,UAAU,GAAG,IAAb;AACH;;AACD,MAAIE,WAAW,gBACX,QAAC,QAAD;AACI,IAAA,EAAE,EAAE7B,UAAU,CAACS,GADnB;AAGI,IAAA,EAAE,EAAE;AAAEqB,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,OAAO,EAAE,MAA9B;AAAsCC,MAAAA,CAAC,EAAE;AAAzC,KAHR;AAII,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJX;AAKI,IAAA,MAAM,MALV;AAMI,IAAA,OAAO,EAAG9B,KAAD,IAAW;AAChBD,MAAAA,cAAc,CAACC,KAAD,EAAQH,UAAU,CAACS,GAAnB,CAAd;AACH,KARL;AAUI,IAAA,KAAK,EAAE;AACHyB,MAAAA,QAAQ,EAAE;AADP,KAVX;AAAA,4BAcQ,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEF,QAAAA,CAAC,EAAE,CAAL;AAAQG,QAAAA,QAAQ,EAAE;AAAlB,OAAT;AAAA,gBAAiCnC,UAAU,CAACoC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAdR,eAeQ,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEJ,QAAAA,CAAC,EAAE;AAAL,OAAT;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAElB,gBAArB;AAAuC,sBAAW,MAAlD;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAACoB,YAAAA,QAAQ,EAAC;AAAV;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfR,eAoBQ,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEF,QAAAA,CAAC,EAAE;AAAL,OAAT;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAG7B,KAAD,IAAW;AAC5BgB,UAAAA,gBAAgB,CAAChB,KAAD,EAAQH,UAAU,CAACS,GAAnB,CAAhB;AACH,SAFD;AAEG,sBAAW,QAFd;AAAA,+BAGI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACyB,YAAAA,QAAQ,EAAC;AAAV;AAAnB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBR;AAAA,KAESlC,UAAU,CAACS,GAFpB;AAAA;AAAA;AAAA;AAAA,UADJ;;AA8BA,MAAIb,UAAJ,EAAgB;AACZiC,IAAAA,WAAW,gBACP,QAAC,SAAD;AACI,MAAA,MAAM,EAAC,QADX;AAEI,MAAA,QAAQ,MAFZ;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,EAAE,EAAE,UAAU7B,UAAU,CAACS,GAJ7B;AAKI,MAAA,KAAK,EAAC,iBALV;AAMI,MAAA,IAAI,EAAC,MANT;AAOI,MAAA,YAAY,EAAC,iBAPjB;AAQI,MAAA,SAAS,EAAC,WARd;AASI,MAAA,UAAU,EAAEY,cAThB;AAUI,MAAA,QAAQ,EAAEG,gBAVd;AAWI,MAAA,YAAY,EAAExB,UAAU,CAACoC,IAX7B;AAYI,MAAA,UAAU,EAAE;AAACC,QAAAA,KAAK,EAAE;AAACH,UAAAA,QAAQ,EAAE;AAAX;AAAR,OAZhB;AAaI,MAAA,eAAe,EAAE;AAACG,QAAAA,KAAK,EAAE;AAACH,UAAAA,QAAQ,EAAE;AAAX;AAAR,OAbrB;AAcI,MAAA,SAAS;AAdb;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AACD,SACIL,WADJ;AAGH;;GA/GQpC,Q;;KAAAA,Q;AAiHT,eAAeA,QAAf","sourcesContent":["import { useContext, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport Box from '@mui/material/Box';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n/*\r\n    This is a card in our list of top 5 lists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction ListCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [editActive, setEditActive] = useState(false);\r\n    const [text, setText] = useState(\"\");\r\n    const { idNamePair, selected } = props;\r\n\r\n    function handleLoadList(event, id) {\r\n        console.log(\"handleLoadList for \" + id);\r\n        if (!event.target.disabled) {\r\n            let _id = event.target.id;\r\n            if (_id.indexOf('list-card-text-') >= 0)\r\n                _id = (\"\" + _id).substring(\"list-card-text-\".length);\r\n\r\n            console.log(\"load \" + event.target.id);\r\n\r\n            // CHANGE THE CURRENT LIST\r\n            store.setCurrentList(id);\r\n        }\r\n    }\r\n\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsListNameEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n\r\n    async function handleDeleteList(event, id) {\r\n        event.stopPropagation();\r\n        let _id = event.target.id;\r\n        _id = (\"\" + _id).substring(\"delete-list-\".length);\r\n        store.markListForDeletion(id);\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        if (event.code === \"Enter\") {\r\n            let id = event.target.id.substring(\"list-\".length);\r\n            store.changeListName(id, text);\r\n            toggleEdit();\r\n        }\r\n    }\r\n    function handleUpdateText(event) {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    let selectClass = \"unselected-list-card\";\r\n    if (selected) {\r\n        selectClass = \"selected-list-card\";\r\n    }\r\n    let cardStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        cardStatus = true;\r\n    }\r\n    let cardElement =\r\n        <ListItem\r\n            id={idNamePair._id}\r\n            key={idNamePair._id}\r\n            sx={{ marginTop: '15px', display: 'flex', p: 1 }}\r\n            style={{ width: '100%' }}\r\n            button\r\n            onClick={(event) => {\r\n                handleLoadList(event, idNamePair._id)\r\n            }\r\n            }\r\n            style={{\r\n                fontSize: '48pt'\r\n            }}\r\n        >\r\n                <Box sx={{ p: 1, flexGrow: 1 }}>{idNamePair.name}</Box>\r\n                <Box sx={{ p: 1 }}>\r\n                    <IconButton onClick={handleToggleEdit} aria-label='edit'>\r\n                        <EditIcon style={{fontSize:'48pt'}} />\r\n                    </IconButton>\r\n                </Box>\r\n                <Box sx={{ p: 1 }}>\r\n                    <IconButton onClick={(event) => {\r\n                        handleDeleteList(event, idNamePair._id)\r\n                    }} aria-label='delete'>\r\n                        <DeleteIcon style={{fontSize:'48pt'}} />\r\n                    </IconButton>\r\n                </Box>\r\n        </ListItem>\r\n\r\n    if (editActive) {\r\n        cardElement =\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id={\"list-\" + idNamePair._id}\r\n                label=\"Top 5 List Name\"\r\n                name=\"name\"\r\n                autoComplete=\"Top 5 List Name\"\r\n                className='list-card'\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                defaultValue={idNamePair.name}\r\n                inputProps={{style: {fontSize: 48}}}\r\n                InputLabelProps={{style: {fontSize: 24}}}\r\n                autoFocus\r\n            />\r\n    }\r\n    return (\r\n        cardElement\r\n    );\r\n}\r\n\r\nexport default ListCard;"]},"metadata":{},"sourceType":"module"}