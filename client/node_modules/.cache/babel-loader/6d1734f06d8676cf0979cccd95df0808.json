{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iaref\\\\Desktop\\\\FinalProject\\\\FinalProject\\\\client\\\\src\\\\components\\\\EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/HighlightOff';\nimport RedoIcon from '@mui/icons-material/Redo';\nimport UndoIcon from '@mui/icons-material/Undo';\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  let enabledButtonClass = \"top5-button\";\n\n  function handleUndo() {\n    store.undo();\n  }\n\n  function handleRedo() {\n    store.redo();\n  }\n\n  function handleUser() {}\n\n  let editStatus = false;\n\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n\n  console.log(\"canUndo: \" + store.canUndo());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: !store.canUndo(),\n      id: \"undo-button\",\n      onClick: handleUndo,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(UndoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !store.canRedo(),\n      id: \"redo-button\",\n      onClick: handleRedo,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(RedoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: editStatus,\n      id: \"close-button\",\n      onClick: handleClose,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"sources":["C:/Users/iaref/Desktop/FinalProject/FinalProject/client/src/components/EditToolbar.js"],"names":["useContext","GlobalStoreContext","Button","CloseIcon","RedoIcon","UndoIcon","EditToolbar","store","enabledButtonClass","handleUndo","undo","handleRedo","redo","handleUser","editStatus","isListNameEditActive","console","log","canUndo","canRedo","handleClose"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAYP,UAAU,CAACC,kBAAD,CAA5B;AAEA,MAAIO,kBAAkB,GAAG,aAAzB;;AACA,WAASC,UAAT,GAAsB;AAClBF,IAAAA,KAAK,CAACG,IAAN;AACH;;AACD,WAASC,UAAT,GAAsB;AAClBJ,IAAAA,KAAK,CAACK,IAAN;AACH;;AAED,WAASC,UAAT,GAAsB,CAErB;;AACD,MAAIC,UAAU,GAAG,KAAjB;;AACA,MAAIP,KAAK,CAACQ,oBAAV,EAAgC;AAC5BD,IAAAA,UAAU,GAAG,IAAb;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcV,KAAK,CAACW,OAAN,EAA1B;AACA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAE,CAACX,KAAK,CAACW,OAAN,EADf;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,OAAO,EAAET,UAHb;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA,6BAKQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAE,CAACF,KAAK,CAACY,OAAN,EADf;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,OAAO,EAAER,UAHb;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA,6BAKQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAEG,UADd;AAEI,MAAA,EAAE,EAAC,cAFP;AAGI,MAAA,OAAO,EAAEM,WAHb;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA,6BAKQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA5CQd,W;;KAAAA,W;AA8CT,eAAeA,WAAf","sourcesContent":["import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport Button from '@mui/material/Button';\r\nimport CloseIcon from '@mui/icons-material/HighlightOff';\r\nimport RedoIcon from '@mui/icons-material/Redo';\r\nimport UndoIcon from '@mui/icons-material/Undo';\r\n\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n\r\n    let enabledButtonClass = \"top5-button\";\r\n    function handleUndo() {\r\n        store.undo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n    }\r\n    \r\n    function handleUser() {\r\n\r\n    }\r\n    let editStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        editStatus = true;\r\n    }\r\n    console.log(\"canUndo: \" + store.canUndo());   \r\n    return (\r\n        <div id=\"edit-toolbar\">\r\n            <Button \r\n                disabled={!store.canUndo()}\r\n                id='undo-button'\r\n                onClick={handleUndo}\r\n                variant=\"contained\">\r\n                    <UndoIcon />\r\n            </Button>\r\n            <Button \r\n                disabled={!store.canRedo()}\r\n                id='redo-button'\r\n                onClick={handleRedo}\r\n                variant=\"contained\">\r\n                    <RedoIcon />\r\n            </Button>\r\n            <Button \r\n                disabled={editStatus}\r\n                id='close-button'\r\n                onClick={handleClose}\r\n                variant=\"contained\">\r\n                    <CloseIcon />\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditToolbar;"]},"metadata":{},"sourceType":"module"}